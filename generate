#!/bin/bash

SCRIPT_PATH=$(dirname $(readlink -f $0))
TMP_PATH=$(mktemp -d)
BUILD_VERSION=$(date +"%y%m%d%H%M")

print_invalid_usage() {
	echo "Invalid usage."
	echo "Usage: generate <hdf_file_path> <output_directory_path>"
}

HDF_PATH="$1"
OUTPUT_PATH="$2"

if [[ "$HDF_PATH" = "" ]]; then
	print_invalid_usage
	exit 1
fi

if [[ "$OUTPUT_PATH" = "" ]]; then
	print_invalid_usage
	exit 1
fi

if [[ ! -f "$HDF_PATH" ]]; then
	echo "Invalid hdf file path provided."
	echo "Make sure the path to the hdf file is right."
	exit 1
fi

if [[ ! -d "$OUTPUT_PATH" ]]; then
	echo "Invalid output directory provided."
	echo "Make sure the path to the output directory is right."
	exit 1
fi

UNZIP_PATH=$(command -v unzip)
if [[ $? -ne 0 ]]; then
	echo "The unzip command is needed to run this script."
	echo "Make sure the the unzip package has been installed."
	echo "Guide:"
	echo "sudo apt install unzip"
	exit
fi

XSCT_PATH=$(command -v xsct)
if [[ $? -ne 0 ]]; then
	echo "The xsct command, which is part of the Vivado program suite is needed to run this script."
	echo "Make sure the settings.sh file the target Vivado version has been sourced."
	echo "Example: source ~/Xilinx/Vivado/2019.1/settings.sh"
	exit
fi

DTC_PATH=$(command -v dtc)
if [[ $? -ne 0 ]]; then
	echo "The dtc command is needed to run this script."
	echo "Make sure the device-tree-compiler package has been installed."
	echo "Guide:"
	echo "git clone https://github.com/dgibson/dtc"
	echo "cd dtc"
	echo "make install"
	exit
fi

HDF_NAME=$(basename "$HDF_PATH")
TMP_HDF_PATH="$TMP_PATH/$HDF_NAME"
cp "$HDF_PATH" "$TMP_HDF_PATH"

echo "Unzipping hdf file..."
unzip -o "$TMP_HDF_PATH" -d "$TMP_PATH"
if [[ $? -ne 0 ]]; then
	echo "Unzipping hdf file failed."
	exit
fi

echo
echo "Figuring out processor architecture..."
TMP_SYSDEF_PATH="$TMP_PATH/sysdef.xml"

IS_ZYNQ=$(grep "zynq" "$TMP_SYSDEF_PATH")
if [[ $? -eq 0 ]]; then
	ARCH="zynq"
fi

if [[ "$ARCH" = "" ]]; then
	echo "Unsupported processor architecture $ARCH."
	exit 1
fi
echo "Processor architecture is $ARCH."

echo
echo "Converting hdf file to device tree source files..."

if [[ "$ARCH" = "zynq" ]]; then
	PROC="ps7_cortexa9_0"
fi

SCRIPT_DT_OVERLAY_PATH="$SCRIPT_PATH"/lib/dt_overlay.tcl
SCRIPT_DTX_PATH="$SCRIPT_PATH"/device-tree-xlnx
xsct "$SCRIPT_DT_OVERLAY_PATH" "$TMP_HDF_PATH" "$PROC" "$SCRIPT_DTX_PATH" "$TMP_PATH"
if [[ $? -ne 0 ]]; then
	echo "Device tree source files generation failed."
	exit 1
fi

echo
echo "Replacing target firmware name..."
TMP_DTSI_PATH="$TMP_PATH/pl.dtsi"
TMP_DTBO_PATH="$TMP_PATH/pl.dtbo"
BIN_NAME="fpga-$BUILD_VERSION.bin"
sed -ri "s|firmware-name = \".+\";||g" "$TMP_DTSI_PATH"
if [[ $? -ne 0 ]]; then
	echo "Replacing target firmware name failed."
	exit 1
fi

echo
echo "Compiling device tree source files..."
dtc -O dtb -o "$TMP_DTBO_PATH" -b 0 -@ "$TMP_DTSI_PATH"
if [[ $? -ne 0 ]]; then
	echo "Device tree source files compilation failed."
	exit 1
fi

echo
echo "Generating bin file..."

TMP_BIT_PATH=$(find "$TMP_PATH" -name "*.bit")
BIF_TEMPLATE_PATH="$SCRIPT_PATH/lib/template.bif"
TMP_BIF_PATH="$TMP_PATH/bitstream.bif"
sed -r "s|template.bit|$TMP_BIT_PATH|" "$BIF_TEMPLATE_PATH" > "$TMP_BIF_PATH"

TMP_BIN_PATH="$TMP_BIT_PATH.bin"
bootgen -image "$TMP_BIF_PATH" -arch "$ARCH" -process_bitstream bin
if [[ $? -ne 0 ]]; then
	echo "Bin file generation failed."
	exit 1
fi

echo
echo "Copying output files..."
DTSI_PATH=$(realpath "$OUTPUT_PATH/overlay-$BUILD_VERSION.dtsi")
DTBO_PATH=$(realpath "$OUTPUT_PATH/overlay-$BUILD_VERSION.dtbo")
BIN_PATH=$(realpath "$OUTPUT_PATH/fpga-$BUILD_VERSION.bin")
cp "$TMP_DTSI_PATH" "$DTSI_PATH"
cp "$TMP_DTBO_PATH" "$DTBO_PATH"
cp "$TMP_BIN_PATH" "$BIN_PATH"
echo "dtsi: $DTSI_PATH"
echo "dtbo: $DTBO_PATH"
echo "bin: $BIN_PATH"

echo
echo "Cleaning up..."
rm -rf "$TMP_PATH"

echo
echo "Finished."
